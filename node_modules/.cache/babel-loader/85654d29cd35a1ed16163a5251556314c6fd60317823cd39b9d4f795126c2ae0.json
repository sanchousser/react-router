{"ast":null,"code":"export const FakeAPI = () => {\n  login: async ({\n    email,\n    password\n  }) => {\n    return Promise(resolve => {\n      setTimeout(() => {\n        if (email === 'test@gmail.com' && password === '1234') {\n          resolve({\n            success: true,\n            user: {\n              name: Admin\n            }\n          });\n        } else {\n          resolve({\n            success: false,\n            message: 'invalid credentials'\n          });\n        }\n      }, 1000);\n    });\n  };\n};\n_c = FakeAPI;\nvar _c;\n$RefreshReg$(_c, \"FakeAPI\");","map":{"version":3,"names":["FakeAPI","login","email","password","Promise","resolve","setTimeout","success","user","name","Admin","message","_c","$RefreshReg$"],"sources":["/Users/aleksgolyuk/Documents/GitHub/react-router/src/services/loginFakeAPI.js"],"sourcesContent":["export const FakeAPI = () => {\n    login: async ({email, password}) => {\n        return Promise((resolve) => {\n            setTimeout(() => {\n                if(email === 'test@gmail.com' && password === '1234') {\n                    resolve({success: true, user: {name: Admin}})\n                } else {\n                    resolve({success: false, message: 'invalid credentials'})\n                }\n            }, 1000)\n        })\n    }\n}"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAGA,CAAA,KAAM;EACzBC,KAAK,EAAE,OAAO;IAACC,KAAK;IAAEC;EAAQ,CAAC,KAAK;IAChC,OAAOC,OAAO,CAAEC,OAAO,IAAK;MACxBC,UAAU,CAAC,MAAM;QACb,IAAGJ,KAAK,KAAK,gBAAgB,IAAIC,QAAQ,KAAK,MAAM,EAAE;UAClDE,OAAO,CAAC;YAACE,OAAO,EAAE,IAAI;YAAEC,IAAI,EAAE;cAACC,IAAI,EAAEC;YAAK;UAAC,CAAC,CAAC;QACjD,CAAC,MAAM;UACHL,OAAO,CAAC;YAACE,OAAO,EAAE,KAAK;YAAEI,OAAO,EAAE;UAAqB,CAAC,CAAC;QAC7D;MACJ,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAAAC,EAAA,GAZYZ,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}