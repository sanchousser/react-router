{"ast":null,"code":"var _jsxFileName = \"/Users/aleksgolyuk/Documents/GitHub/react-router/src/pages/ProductsDetails.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { getProductsId } from './../../src/services/fakeAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductsDetails() {\n  _s();\n  const {\n    productId\n  } = useParams();\n  //   const params = useParams();\n  const product = getProductsId(productId);\n\n  //? useParams(); - Повертає об'єкт з усіма динамічними параметрами, які є в поточному URL. Ім'я параметра буде ім'ям властивості в об'єкті, а його поточне значення в адресі - значенням властивості.\n\n  //   console.log(params);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ProductsDetails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Product - \", product.name, \" - \", productId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aliquam quibusdam accusantium expedita animi atque molestias corrupti officia neque qui amet, nulla cumque ad voluptas ut voluptatum recusandae libero eum magni quam suscipit molestiae similique, facere unde fuga? Ex animi aperiam eaque nisi culpa ipsum quibusdam, consequatur repellat porro saepe repellendus obcaecati tempore necessitatibus architecto expedita voluptas dolorum earum. Quaerat iste consequatur architecto quod, quidem ducimus in esse repellendus alias accusantium aperiam nostrum vel quis iusto facilis. Est mollitia tenetur accusamus assumenda, eveniet perferendis voluptatum repellat molestiae vel ducimus? Officiis veniam sunt eos eum illum. Blanditiis nihil accusantium debitis necessitatibus quibusdam.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductsDetails, \"QX76Lr8G00NVlyiWUU0JNEO3QJE=\", false, function () {\n  return [useParams];\n});\n_c = ProductsDetails;\nvar _c;\n$RefreshReg$(_c, \"ProductsDetails\");","map":{"version":3,"names":["useParams","getProductsId","jsxDEV","_jsxDEV","ProductsDetails","_s","productId","product","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/aleksgolyuk/Documents/GitHub/react-router/src/pages/ProductsDetails.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport {getProductsId} from './../../src/services/fakeAPI'\n\n\nexport default function ProductsDetails() {\n  const { productId } = useParams();\n  //   const params = useParams();\n  const product = getProductsId(productId);\n\n  //? useParams(); - Повертає об'єкт з усіма динамічними параметрами, які є в поточному URL. Ім'я параметра буде ім'ям властивості в об'єкті, а його поточне значення в адресі - значенням властивості.\n\n  //   console.log(params);\n\n  return (\n    <main>\n      <h1>ProductsDetails</h1>\n      <h2>\n        Product - {product.name} - {productId}\n      </h2>\n\n      <p>\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aliquam\n        quibusdam accusantium expedita animi atque molestias corrupti officia\n        neque qui amet, nulla cumque ad voluptas ut voluptatum recusandae libero\n        eum magni quam suscipit molestiae similique, facere unde fuga? Ex animi\n        aperiam eaque nisi culpa ipsum quibusdam, consequatur repellat porro\n        saepe repellendus obcaecati tempore necessitatibus architecto expedita\n        voluptas dolorum earum. Quaerat iste consequatur architecto quod, quidem\n        ducimus in esse repellendus alias accusantium aperiam nostrum vel quis\n        iusto facilis. Est mollitia tenetur accusamus assumenda, eveniet\n        perferendis voluptatum repellat molestiae vel ducimus? Officiis veniam\n        sunt eos eum illum. Blanditiis nihil accusantium debitis necessitatibus\n        quibusdam.\n      </p>\n    </main>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAAQC,aAAa,QAAO,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG1D,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAU,CAAC,GAAGN,SAAS,CAAC,CAAC;EACjC;EACA,MAAMO,OAAO,GAAGN,aAAa,CAACK,SAAS,CAAC;;EAExC;;EAEA;;EAEA,oBACEH,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBT,OAAA;MAAAK,QAAA,GAAI,YACQ,EAACD,OAAO,CAACM,IAAI,EAAC,KAAG,EAACP,SAAS;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAELT,OAAA;MAAAK,QAAA,EAAG;IAaH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEX;AAACP,EAAA,CAhCuBD,eAAe;EAAA,QACfJ,SAAS;AAAA;AAAAc,EAAA,GADTV,eAAe;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}